import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';
import { RootState, AppThunk } from '../../app/store';

interface Input {
  key: string;
  name: string
  type: string
  id: number
  required: boolean
  min: string
  max: string
}

export interface FormState {
  input: Input,
  inputArr: Input[]
}

const initialState: FormState = {
  input: {
          key: 'Key',
          name: 'Name',
          type: 'text',
          id: Date.now(),
          required: false,
          min: '0',
          max: '10'
  },
  inputArr: []
};



export const formSlice = createSlice({
  name: 'form',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
   
    // Use the PayloadAction type to declare the contents of `action.payload`
    addName: (state, action: PayloadAction<string>) => {
      state.input.name += action.payload;
    },
    addKey: (state, action: PayloadAction<string>) => {
      state.input.key += action.payload;
    },
    addType: (state, action: PayloadAction<string>) => {
      state.input.type += action.payload;
    },
    addItem: (state, action: PayloadAction<Input>) => {
      state.inputArr.push(action.payload)
    },

    validate: (state, action: PayloadAction<boolean>) => {
      state.input.required = action.payload
    },

    setmin: (state, action: PayloadAction<string>) => {
      state.input.min = action.payload
    },

    setmax: (state, action: PayloadAction<string>) => {
      state.input.max = action.payload
    },

    

    
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  
});

export const { addName, addKey, addType, addItem, validate, setmin, setmax } = formSlice.actions;

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`
export const selectForm = (state: RootState) => state.form.input;
export const selectArr= (state: RootState) => state.form.inputArr;
export default formSlice.reducer;
